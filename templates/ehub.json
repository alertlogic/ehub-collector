{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "Application Name": {
            "type": "String"
        },
        "Alert Logic Access Key ID": {
            "type": "String"
        },
        "Alert Logic Secret Key": {
            "type": "SecureString"
        },
        "Alert Logic API endpoint": {
            "type": "String",
            "defaultValue": "api.global-services.global.alertlogic.com",
            "allowedValues" : [
                "api.global-services.global.alertlogic.com",
                "api.global-integration.product.dev.alertlogic.com"
            ]
        },
        "Alert Logic Data Residency": {
            "type": "String",
            "defaultValue": "default",
            "allowedValues": [
                "default"
            ]
        },
        "Event Hub Resource Group": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Specifies the resource group for existing event hub. Leave empty to install Alert Logic managed event hub infrastructure."
            }
        },
        "Event Hub Connection String": {
            "type": "SecureString",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Specifies the connection string for existing event hub. Leave empty if you use Alert Logic managed event hub infrastructure."
            }
        },
        "Event Hub Namespace": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Specifies the namespace for existing event hub. Leave empty if you use Alert Logic managed event Hub infrastructure."
            }
        },
        "Event Hub Name": {
            "type": "String",
            "defaultValue": "insights-operational-logs",
            "metadata": {
                "description": "Please use the actual name if using existing event hub."
            }
        },
        "Event Hub Consumer Group": {
            "type": "String",
            "defaultValue": "$Default",
            "metadata": {
                "description": "Please use the actual consumer group if using existing event hub."
            }
        },
        "Event Hub Filter Json": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Please enter type of filter in JSON format. Only messages which contain the specified property will be collected.\n e.g {\"channels\": \"Operation\"}"
            }
        },
        "Event Hub Filter Regex": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Please enter type of filter in REGEX format. Only messages which contain the specified property will be collected.\n e.g ^channels.*"
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceGroupId": "[resourceGroup().id]",
        "contribRoleAssignmentName": "[guid(uniqueString( variables('resourceGroupId'), deployment().name ))]",
        "subscriptionId": "[subscription().subscriptionId]",
        "tenantId": "[subscription().tenantId]",
        "webAppStorageAccountName": "[take(concat('alertlogicstorage', uniqueString(concat(subscription().tenantId, parameters('Application Name')))), 24)]",
        "webAppSourceControlName": "web",
        "contributorRole": "[concat('/subscriptions/', variables('subscriptionId'), '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "readerRole": "[concat('/subscriptions/', variables('subscriptionId'), '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "ehubNsName": "[if(equals(parameters('Event Hub Namespace'), ''), concat('AlertLogicIngest-', variables('location'), '-', uniqueString(variables('resourceGroupId'))), parameters('Event Hub Namespace'))]",
        "ehubName": "[if(equals(parameters('Event Hub Name'), ''), 'insights-operational-logs', toLower(parameters('Event Hub Name')))]",
        "ehubResourceGroup": "[if(equals(parameters('Event Hub Resource Group'), ''), variables('resourceGroupName'), parameters('Event Hub Resource Group'))]",
        "ehubConsumerGroup": "[if(equals(parameters('Event Hub Consumer Group'), ''), '$Default', parameters('Event Hub Consumer Group'))]",
        "createNewEhubInfraCond": "[if(and(equals(parameters('Event Hub Resource Group'), ''), equals(parameters('Event Hub Connection String'), ''), equals(parameters('Event Hub Namespace'), '')), bool('true'), bool('false'))]",
        "repo": "https://github.com/imranalisyed506/ehub-collector.git",
        "branch": "im-ehub-v4-update",
        "nodeRuntimeVersion": "~14",
        "azureFunctionExtensionsVersion": "~3",
        "dlContainerName": "alertlogic-dl",
        "statsQueueName": "alertlogic-stats",
        "newEhubMaxThroughputUnits": 20,
        "newEhubAutoInflateEnabled": true,
        "newEhubPartitionCount": 32,
        "newEhubRetentionDays": 7,
        "filterJson": "[parameters('Event Hub Filter Json')]",
        "filterRegex": "[parameters('Event Hub Filter Regex')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/Sites",
            "kind": "functionapp",
            "name": "[parameters('Application Name')]",
            "apiVersion": "2018-02-01",
            "location": "[variables('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "name": "[parameters('Application Name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('webAppStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webAppStorageAccountName')), '2015-06-15').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('webAppStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webAppStorageAccountName')), '2015-06-15').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "[variables('azureFunctionExtensionsVersion')]"
                        },
                        {
                            "name": "SCM_USE_FUNCPACK",
                            "value": "1"
                        },
                        {
                            "name": "SCM_POST_DEPLOYMENT_ACTIONS_PATH",
                            "value": "PostDeploymentActions"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('webAppStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webAppStorageAccountName')), '2015-06-15').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(toLower(parameters('Application Name')), '9546')]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "[variables('nodeRuntimeVersion')]"
                        }
                    ],
                    "connectionStrings": [
                        {
                            "name": "APP_AL_ACCESS_KEY_ID",
                            "type": "Custom",
                            "connectionString": "[parameters('Alert Logic Access Key ID')]"
                        },
                        {
                            "name": "APP_AL_SECRET_KEY",
                            "type": "Custom",
                            "connectionString": "[parameters('Alert Logic Secret Key')]"
                        },
                        {
                            "name": "APP_AL_API_ENDPOINT",
                            "type": "Custom",
                            "connectionString": "[parameters('Alert Logic API endpoint')]"
                        },
                        {
                            "name": "APP_AL_RESIDENCY",
                            "type": "Custom",
                            "connectionString": "[parameters('Alert Logic Data Residency')]"
                        }
                    ],
                    "ftpsState": "FtpsOnly"
                },
                "clientAffinityEnabled": false,
                "httpsOnly": true,
                "clientCertEnabled": true,
                "clientCertMode": "Required"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('webAppStorageAccountName'))]"
            ],
            "resources": [
                {
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "2018-02-01",
                    "name": "[concat(parameters('Application Name'), '/authsettings')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('Application Name'))]"
                    ],
                    "properties": {
                        "enabled": true,
                        "unauthenticatedClientAction": "RedirectToLoginPage",
                        "tokenStoreEnabled": true
                    }
                },
                {
                    "apiVersion": "2018-02-01",
                    "name": "[variables('webAppSourceControlName')]",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('Application Name'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repo')]",
                        "branch": "[variables('branch')]",
                        "IsManualIntegration": true
                    }
                },
                {
                    "apiVersion": "2018-02-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('Application Name'))]",
                        "[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('Application Name'), variables('webAppSourceControlName'))]",
                        "[resourceId('Microsoft.EventHub/namespaces', variables('ehubNsName'))]"
                    ],
                    "properties": {
                        "FUNCTIONS_WORKER_RUNTIME": "node",
                        "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('webAppStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webAppStorageAccountName')), '2015-06-15').key1)]",
                        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('webAppStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webAppStorageAccountName')), '2015-06-15').key1)]",
                        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('webAppStorageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('webAppStorageAccountName')), '2015-06-15').key1)]",
                        "WEBSITE_CONTENTSHARE": "[concat(toLower(parameters('Application Name')), '9546')]",
                        "WEBSITE_NODE_DEFAULT_VERSION": "[variables('nodeRuntimeVersion')]",
                        "FUNCTIONS_EXTENSION_VERSION": "[variables('azureFunctionExtensionsVersion')]",
                        "SCM_USE_FUNCPACK": "1",
                        "SCM_POST_DEPLOYMENT_ACTIONS_PATH": "PostDeploymentActions",
                        "APP_SUBSCRIPTION_ID": "[variables('subscriptionId')]",
                        "APP_RESOURCE_GROUP": "[variables('resourceGroupName')]",
                        "APP_TENANT_ID": "[variables('tenantId')]",
                        "APP_LOG_EHUB_CONNECTION": "[if(equals(parameters('Event Hub Connection String'), ''), listKeys(resourceId('Microsoft.EventHub/namespaces/AuthorizationRules', variables('ehubNsName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString, parameters('Event Hub Connection String'))]",
                        "APP_LOG_EHUB_NAME": "[variables('ehubName')]",
                        "APP_LOG_EHUB_CONSUMER_GROUP": "[variables('ehubConsumerGroup')]",
                        "APP_LOG_EHUB_RESOURCE_GROUP": "[variables('ehubResourceGroup')]",
                        "APP_DL_CONTAINER_NAME": "[variables('dlContainerName')]",
                        "DL_BLOB_PAGE_SIZE": "100",
                        "APP_STATS_QUEUE_NAME": "[variables('statsQueueName')]",
                        "APP_PRINCIPAL_ID": "[reference(resourceId('Microsoft.Web/Sites', parameters('Application Name')), '2016-08-01', 'Full').identity.principalId]",
                        "APP_FILTER_JSON": "[variables('filterJson')]",
                        "APP_FILTER_REGEX": "[variables('filterRegex')]"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('webAppStorageAccountName')]",
            "apiVersion": "2019-06-01",
            "location": "[variables('location')]",
            "kind": "Storage",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "allowBlobPublicAccess": false,
                "supportsHttpsTrafficOnly": true
            },
            "tags": {
                "AlertLogicCollector": "[parameters('Application Name')]"
            },
            "dependsOn": [],
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "name": "[concat('default/', variables('dlContainerName'))]",
                    "dependsOn": [
                        "[variables('webAppStorageAccountName')]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "comments": "Assign contributor role to the app principal id for the resource group application is deployed to.",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[variables('contribRoleAssignmentName')]",
            "apiVersion": "2015-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites', parameters('Application Name'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables('contributorRole')]",
                "principalId": "[reference(resourceId('Microsoft.Web/Sites', parameters('Application Name')), '2016-08-01', 'Full').identity.principalId]",
                "scope": "[variables('resourceGroupId')]"
            }
        },
        {
            "comments": "Create new event hub namespace and event hub in case of new deployment.",
            "condition": "[variables('createNewEhubInfraCond')]",
            "type": "Microsoft.EventHub/namespaces",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "name": "[variables('ehubNsName')]",
            "apiVersion": "2017-04-01",
            "location": "[variables('location')]",
            "tags": {},
            "properties": {
                "isAutoInflateEnabled": "[variables('newEhubAutoInflateEnabled')]",
                "maximumThroughputUnits": "[variables('newEhubMaxThroughputUnits')]"
            },
            "dependsOn": [],
            "resources": [
                {
                    "condition": "[variables('createNewEhubInfraCond')]",
                    "type": "eventhubs",
                    "name": "[variables('ehubName')]",
                    "apiVersion": "2017-04-01",
                    "location": "[variables('location')]",
                    "properties": {
                        "messageRetentionInDays": "[variables('newEhubRetentionDays')]",
                        "partitionCount": "[variables('newEhubPartitionCount')]"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.EventHub/namespaces', variables('ehubNsName'))]"
                    ]
                }
            ]
        },
        {
            "comments": "Assign reader role to the app principal id for existing event hub resource group.",
            "condition": "[not(variables('createNewEhubInfraCond'))]",
            "apiVersion": "2018-05-01",
            "name": "nestedTemplate",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('Event Hub Resource Group')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('Application Name'))]",
                "[resourceId('Microsoft.Web/sites/config', parameters('Application Name'), 'authsettings')]",
                "[resourceId('Microsoft.Web/sites/config', parameters('Application Name'), 'appsettings')]",
                "[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('Application Name'), variables('webAppSourceControlName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "name": "[guid(reference(parameters('Application Name'), '2016-08-01', 'Full').identity.principalId, deployment().name)]",
                            "apiVersion": "2017-09-01",
                            "properties": {
                                "roleDefinitionId": "[variables('readerRole')]",
                                "principalId": "[reference(parameters('Application Name'), '2016-08-01', 'Full').identity.principalId]",
                                "scope": "[concat('/subscriptions/', variables('subscriptionId'), '/resourceGroups/', parameters('Event Hub Resource Group'))]"
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        }
    ]
}
