{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Application Name": {
            "type": "String"
        },
        "Storage Name": {
            "type": "String"
        },
        "Alert Logic Access Key ID": {
            "type": "String"
        },
        "Alert Logic Secret Key": {
            "type": "SecureString"
        },
        "Alert Logic API endpoint": {
            "type": "String",
            "defaultValue": "api.global-services.global.alertlogic.com",
            "allowedValues" : [
                "api.global-services.global.alertlogic.com",
                "api.global-integration.product.dev.alertlogic.com"
            ]
        },
        "Alert Logic Data Residency": {
            "type": "String",
            "defaultValue": "default",
            "allowedValues": [
                "default"
            ]
        },
        "Service Principal ID": {
            "type": "String"
        },
        "App Client ID": {
            "type": "String"
        },
        "App Client Secret": {
            "type": "SecureString"
        },
        "Event Hub Resource Group": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Specifies the resource group for existing event hub. Leave empty to install Alert Logic managed event hub infrastructure."
            }
        },
        "Event Hub Connection String": {
            "type": "SecureString",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Specifies the connection string for existing event hub. Leave empty if you use Alert Logic managed event hub infrastructure."
            }
        },
        "Event Hub Namespace": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Specifies the namespace for existing event hub. Leave empty if you use Alert Logic managed event Hub infrastructure."
            }
        },
        "Event Hub Name": {
            "type": "String",
            "defaultValue": "insights-operational-logs",
            "metadata": {
                "description": "Please use the actual name if using existing event hub."
            }
        },
        "Event Hub Consumer Group": {
            "type": "String",
            "defaultValue": "$Default",
            "metadata": {
                "description": "Please use the actual consumer group if using existing event hub."
            }
        }
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "resourceGroupName": "[resourceGroup().name]",
        "resourceGroupId": "[resourceGroup().id]",
        "contribRoleAssignmentName": "[guid(uniqueString( variables('resourceGroupId'), deployment().name ))]",
        "readerRoleAssignmentName": "[guid(parameters('Service Principal ID'), deployment().name)]",
        "subscriptionId": "[subscription().subscriptionId]",
        "tenantId": "[subscription().tenantId]",
        "contributorRole": "[concat('/subscriptions/', variables('subscriptionId'), '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "readerRole": "[concat('/subscriptions/', variables('subscriptionId'), '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "ehubNewNsName": "[concat('AlertLogicIngest-', variables('location'), '-', uniqueString(variables('resourceGroupId')))]",
        "ehubName": "[if(equals(parameters('Event Hub Name'), ''), 'insights-operational-logs', parameters('Event Hub Name'))]",
        "ehubResourceGroup": "[if(equals(parameters('Event Hub Resource Group'), ''), variables('resourceGroupName'), parameters('Event Hub Resource Group'))]",
        "ehubConsumerGroup": "[if(equals(parameters('Event Hub Consumer Group'), ''), '$Default', parameters('Event Hub Consumer Group'))]",
        "createNewEhubInfraCond": "[if(and(equals(parameters('Event Hub Resource Group'), ''), equals(parameters('Event Hub Connection String'), ''), equals(parameters('Event Hub Namespace'), '')), bool('true'), bool('false'))]",
        "repo": "https://github.com/alertlogic/ehub-collector.git",
        "branch": "v1",
        "dlContainerName": "alertlogic-dl"
    },
    "resources": [
        {
            "type": "Microsoft.Web/sites",
            "kind": "functionapp",
            "name": "[parameters('Application Name')]",
            "apiVersion": "2016-03-01",
            "location": "[variables('location')]",
            "properties": {
                "name": "[parameters('Application Name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('Storage Name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Name')), '2015-06-15').key1)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('Storage Name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Name')), '2015-06-15').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "SCM_USE_FUNCPACK",
                            "value": "1"
                        },
                        {
                            "name": "SCM_POST_DEPLOYMENT_ACTIONS_PATH",
                            "value": "PostDeploymentActions"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('Storage Name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Name')), '2015-06-15').key1)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(toLower(parameters('Application Name')), '9546')]"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "6.5.0"
                        },
                        {
                            "name": "APP_SUBSCRIPTION_ID",
                            "value": "[variables('subscriptionId')]"
                        },
                        {
                            "name": "APP_RESOURCE_GROUP",
                            "value": "[variables('resourceGroupName')]"
                        },
                        {
                            "name": "APP_TENANT_ID",
                            "value": "[variables('tenantId')]"
                        },
                        {
                            "name": "APP_LOG_EHUB_CONNECTION",
                            "value": "[if(equals(parameters('Event Hub Connection String'), ''), listKeys(resourceId('Microsoft.EventHub/namespaces/AuthorizationRules', variables('ehubNewNsName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString, parameters('Event Hub Connection String'))]"
                        },
                        {
                            "name": "APP_LOG_EHUB_NAME",
                            "value": "[variables('ehubName')]"
                        },
                        {
                            "name": "APP_LOG_EHUB_CONSUMER_GROUP",
                            "value": "[variables('ehubConsumerGroup')]"
                        },
                        {
                            "name": "APP_LOG_EHUB_RESOURCE_GROUP",
                            "value": "[variables('ehubResourceGroup')]"
                        },
                        {
                            "name": "APP_DL_CONTAINER_NAME",
                            "value": "[variables('dlContainerName')]"
                        },
                        {
                            "name": "DL_BLOB_PAGE_SIZE",
                            "value": "100"
                        }
                    ],
                    "connectionStrings": [
                        {
                            "name": "APP_CLIENT_ID",
                            "type": "Custom",
                            "connectionString": "[parameters('App Client ID')]"
                        },
                        {
                            "name": "APP_CLIENT_SECRET",
                            "type": "Custom",
                            "connectionString": "[parameters('App Client Secret')]"
                        },
                        {
                            "name": "APP_AL_ACCESS_KEY_ID",
                            "type": "Custom",
                            "connectionString": "[parameters('Alert Logic Access Key ID')]"
                        },
                        {
                            "name": "APP_AL_SECRET_KEY",
                            "type": "Custom",
                            "connectionString": "[parameters('Alert Logic Secret Key')]"
                        },
                        {
                            "name": "APP_AL_API_ENDPOINT",
                            "type": "Custom",
                            "connectionString": "[parameters('Alert Logic API endpoint')]"
                        },
                        {
                            "name": "APP_AL_RESIDENCY",
                            "type": "Custom",
                            "connectionString": "[parameters('Alert Logic Data Residency')]"
                        }
                    ]
                },
                "clientAffinityEnabled": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('Storage Name'))]"
            ],
            "resources": [{
                "apiVersion": "2015-08-01",
                "name": "web",
                "type": "sourcecontrols",
                "dependsOn": [
                    "[resourceId('Microsoft.Web/Sites', parameters('Application Name'))]"
                ],
                "properties": {
                    "RepoUrl": "[variables('repo')]",
                    "branch": "[variables('branch')]",
                    "IsManualIntegration": true
                }
            }]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('Storage Name')]",
            "apiVersion": "2015-06-15",
            "location": "[variables('location')]",
            "properties": {
                "accountType": "Standard_LRS"
            },
            "dependsOn": [],
            "resources": [
                {
                    "type": "blobServices/containers",
                    "apiVersion": "2018-07-01",
                    "name": "[concat('default/', variables('dlContainerName'))]",
                    "dependsOn": [
                        "[parameters('Storage Name')]"
                    ],
                    "properties": {
                        "publicAccess": "None"
                    }
                }
            ]
        },
        {
            "comments": "Assign contributor role to the app principal id for the resource group application is deployed to.",
            "type": "Microsoft.Authorization/roleAssignments",
            "name": "[variables('contribRoleAssignmentName')]",
            "apiVersion": "2015-07-01",
            "properties": {
                "roleDefinitionId": "[variables('contributorRole')]",
                "principalId": "[parameters('Service Principal ID')]",
                "scope": "[variables('resourceGroupId')]"
            }
        },
        {
            "comments": "Create new event hub namespace and event hub in case of new deployment.",
            "condition": "[variables('createNewEhubInfraCond')]",
            "type": "Microsoft.EventHub/namespaces",
            "sku": {
                "name": "Standard",
                "tier": "Standard",
                "capacity": 1
            },
            "name": "[variables('ehubNewNsName')]",
            "apiVersion": "2017-04-01",
            "location": "[variables('location')]",
            "tags": {},
            "properties": {
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 16
            },
            "dependsOn": [],
            "resources": [
                {
                    "condition": "[variables('createNewEhubInfraCond')]",
                    "type": "eventhubs",
                    "name": "[variables('ehubName')]",
                    "apiVersion": "2017-04-01",
                    "location": "[variables('location')]",
                    "properties": {
                        "messageRetentionInDays": 7,
                        "partitionCount": 4
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.EventHub/namespaces', variables('ehubNewNsName'))]"
                    ]
                }
            ]
        },
        {
            "comments": "Assign reader role to the app principal id for existing event hub resource group.",
            "condition": "[not(variables('createNewEhubInfraCond'))]",
            "apiVersion": "2018-05-01",
            "name": "nestedTemplate",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('Event Hub Resource Group')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "name": "[variables('readerRoleAssignmentName')]",
                            "apiVersion": "2017-09-01",
                            "properties": {
                                "roleDefinitionId": "[variables('readerRole')]",
                                "principalId": "[parameters('Service Principal ID')]",
                                "scope": "[concat(variables('subscriptionId'), '/resourceGroups/', parameters('Event Hub Resource Group'))]"
                            }
                        }
                    ]
                },
                "parameters": {}
            }
        }
    ]
}
